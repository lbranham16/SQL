--Create actors, movies and hobbies database

CREATE TABLE actors (id INTEGER PRIMARY KEY AUTOINCREMENT, fullname TEXT, gender TEXT, age INTEGER);

INSERT INTO actors (fullname, gender, age) VALUES ("Johnny Depp", "Male", "50");
INSERT INTO actors (fullname, gender, age) VALUES ("Steve Correl", "Male", "49");
INSERT INTO actors (fullname, gender, age) VALUES ("Meryl Streep", "Female", "58");
INSERT INTO actors (fullname, gender, age) VALUES ("Jennifer Connolly", "Female", "52");
INSERT INTO actors (fullname, gender, age) VALUES ("Ellen Page", "Female", "40");
INSERT INTO actors (fullname, gender, age) VALUES ("Jennifer Lopez", "Female", "55");
INSERT INTO actors (fullname, gender, age) VALUES ("Christopher Walkin", "Male", "62");
INSERT INTO actors (fullname, gender, age) VALUES ("Russel Crow", "Male", "54");
INSERT INTO actors (fullname, gender, age) VALUES ("Reese Witherspoon", "Female", "53");
INSERT INTO actors (fullname, gender, age) VALUES ("Keanu Reeves", "Male", "55");
INSERT INTO actors (fullname, gender, age) VALUES ("Michelle Pfeiffer", "Female", "64");
INSERT INTO actors (fullname, gender, age) VALUES ("Christian Slater", "Male", "53");
INSERT INTO actors (fullname, gender, age) VALUES ("Molly Shannon", "Female", "58");
INSERT INTO actors (fullname, gender, age) VALUES ("Will Ferrell", "Male", "55");
INSERT INTO actors (fullname, gender, age) VALUES ("Joaquin Phoenix", "Male", "48");


CREATE TABLE movies (id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT, actor_id INTEGER, year INTEGER, rating TEXT, genre TEXT);


INSERT INTO movies (title, actor_id, year, rating, genre) VALUES ("Edward Scissor Hands", 1, "1997", "PG-13", "Comedy");
INSERT INTO movies (title, actor_id, year, rating, genre) VALUES ("The 40-Year Old Virgin", 2, "2002", "R", "comedy");
INSERT INTO movies (title, actor_id, year, rating, genre) VALUES ("The Devil Wears Prada", 3, "2008", "PG-13", "Comedy");
INSERT INTO movies (title, actor_id, year, rating, genre) VALUES ("The Labyrinth", 4, "1994", "PG", "Comedy");
INSERT INTO movies (title, actor_id, year, rating, genre) VALUES ("Juno", 5, "2008", "PG-13", "Comedy");
INSERT INTO movies (title, actor_id, year, rating, genre) VALUES ("Enough", 6, "2004", "PG-13", "Thriller");
INSERT INTO movies (title, actor_id, year, rating, genre) VALUES ("The Prophecy", 7, "1992", "R", "Horror");
INSERT INTO movies (title, actor_id, year, rating, genre) VALUES ("Cinderella Man", 8, "2002", "PG", "Drama");
INSERT INTO movies (title, actor_id, year, rating, genre) VALUES ("Fear", 9, "1996", "R", "Suspense");
INSERT INTO movies (title, actor_id, year, rating, genre) VALUES ("The Devils Advocate", 10, "1996", "R", "Horror");
INSERT INTO movies (title, actor_id, year, rating, genre) VALUES ("Constatine", 10, "2005", "PG-13", "Horror");
INSERT INTO movies (title, actor_id, year, rating, genre) VALUES ("What Lies Beneath", 11, "2000", "R", "Horror");
INSERT INTO movies (title, actor_id, year, rating, genre) VALUES ("True Romance", 12, "1993", "R", "Action");
INSERT INTO movies (title, actor_id, year, rating, genre) VALUES ("Superstar", 13, "1999", "PG-13", "Comedy");
INSERT INTO movies (title, actor_id, year, rating, genre) VALUES ("Anchorman", 14, "2004", "R", "Comedy");
INSERT INTO movies (title, actor_id, year, rating, genre) VALUES ("Walk the Line", 15, "2005", "R", "Drama");

CREATE TABLE hobbies (id INTEGER PRIMARY KEY AUTOINCREMENT, actor_id INTEGER, hobby TEXT);

INSERT INTO hobbies (actor_id, hobby) VALUES (1, "Singing");
INSERT INTO hobbies (actor_id, hobby) VALUES (2, "Reading");
INSERT INTO hobbies (actor_id, hobby) VALUES (3, "Drawing");
INSERT INTO hobbies (actor_id, hobby) VALUES (4, "Running");
INSERT INTO hobbies (actor_id, hobby) VALUES (5, "Singing");
INSERT INTO hobbies (actor_id, hobby) VALUES (6, "Singing");
INSERT INTO hobbies (actor_id, hobby) VALUES (7, "Reading");
INSERT INTO hobbies (actor_id, hobby) VALUES (8, "Running");
INSERT INTO hobbies (actor_id, hobby) VALUES (9, "Singing");
INSERT INTO hobbies (actor_id, hobby) VALUES (10, "Drawing");

SELECT * FROM actors;
SELECT * FROM movies;
SELECT * FROM hobbies;


-- Display the number of male actors above the age of 40
SELECT COUNT(*) AS Male_Above40 FROM actors
    WHERE age > 40 AND gender = "Male";

--Display name of all the female actors
SELECT fullname AS Female_Actors FROM actors
    WHERE gender = "Female";

--Display actors and their respective movies using JOIN
SELECT actors.fullname AS Star_Actor, movies.title AS Title, movies.year AS Year FROM actors
    JOIN movies
    ON movies.actor_id = actors.id;

--Display list of movie ratings and their respective count, grouping by rating
SELECT rating AS List_of_Ratings, COUNT(rating) AS Count FROM movies
    GROUP BY rating;
   
--Display list of actors and their respective hobbies, grouped by hobbies
SELECT hobbies.hobby AS Hobby, actors.fullname AS Actor FROM hobbies
    JOIN actors
    ON hobbies.actor_id = actors.id
    ORDER BY hobby;

--Display list of hobbies and number of actors who participate in that hobby
SELECT hobbies.hobby AS Hobby, COUNT(actors.fullname) AS Number_of_Actors FROM hobbies
    JOIN actors
    ON hobbies.actor_id = actors.id
    GROUP BY hobby;

--Display list of hobbies and number of female actors who participate in that hobby
SELECT hobbies.hobby AS Hobby, COUNT(actors.fullname) AS Number_of_Female_Actors FROM hobbies
    JOIN actors
    ON hobbies.actor_id = actors.id
    WHERE actors.gender = "Female"
    GROUP BY hobby;

--Display list of hobbies and number of male actors who participate in that hobby
SELECT hobbies.hobby AS Hobby, COUNT(actors.fullname) AS Number_of_Male_Actors FROM hobbies
    JOIN actors
    ON hobbies.actor_id = actors.id
    WHERE actors.gender = "Male"
    GROUP BY hobby;

--Display list of actors and the movies they've been in ordered by the movie rating
SELECT actors.fullname AS Actor, movies.rating AS Movie_Rating FROM actors
    JOIN movies
    ON movies.actor_id = actors.id
    ORDER BY movies.rating;
